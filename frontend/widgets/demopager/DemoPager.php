<?php
/**
 * Created by PhpStorm.
 * User: mac
 * Date: 8/8/17
 * Time: 3:48 PM
 */
namespace frontend\widgets\demopager;

use yii\widgets\LinkPager;
use yii\helpers\Html;
use Yii;

class DemoPager extends LinkPager
{
    public $pager_layout = '{pageButtons} {pageSizeList} {goTopage}';

    public $sizeListHtmlOptions = [];
    public $goToPageHtmlOptions = ['placeholder' => 'Go to page'];

    protected $_page_param = 'page';
    protected $_page_size_param = 'per-page';

    private $pageSizeList = [5,10,20,30];

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        $currentPageSize = $this->pagination->getPageSize();

        $this->_page_size_param = $this->pagination->pageSizeParam;
        $this->_page_param = $this->pagination->pageParam;

        if (!in_array($currentPageSize, $this->pageSizeList)){
            array_unshift($this->pageSizeList, $currentPageSize);
            $this->pageSizeList = array_unique($this->pageSizeList);

            sort($this->pageSizeList, SORT_NUMERIC);
        }
    }

    public function run()
    {
        if ($this->registerLinkTags){
            $this->registerLinkTags();
        }

        DemoPagerAsset::register($this->getView());

        return preg_replace_callback_array("/{(\\W+)}/", function ($matches){
            $sub_section_name = $matches[1];
            $sub_section_content = $this->renderSection($sub_section_name);

            return $sub_section_content == false ? $matches[1]: $sub_section_content;
        }, $this->pager_layout);
    }

    protected function renderSection($name){
        switch ($name){
            case 'pageButtons':
                return $this->renderPageButton();

            case 'pageSizeList':
                return $this->renderPageSizeList();

            case 'goToPage':
                return $this->rendergoToPage();

            default:
                return false;
        }
    }

    private function renderPageSizeList()
    {
        return Html::dropDownList($this->_page_size_param,
            $this->pagination->getPageSize(),
            array_combine($this->pageSizeList, $this->pageSizeList),
            $this->sizeListHtmlOptions);
    }



    private function renderGoToPage()
    {
        $current_page =1;
        $params = Yii::$app->getRequest()->queryParams;
        if (isset($params[$this->_page_param])) {
            if ($current_page <1) {
                $current_page = 1;
            }elseif ($current_page > $this->pagination->getPageCount()) {
                $current_page = $this->pagination->getPageCount();
            }
        }

        return Html::textInput($this->_page_param,
            $current_page, $this->goToPageHtmlOptions
        );
    }



}